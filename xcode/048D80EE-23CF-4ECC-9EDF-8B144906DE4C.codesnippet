<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>GG</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>{
    NSMutableData *mutableData;
    
    NSMutableString *currentDescription;
}

-(void)start{
    
    NSString *soapMessage = [NSString stringWithFormat:
                             @"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;"
                             "&lt;soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;"
                             "&lt;soap:Body&gt;"
                             "&lt;/soap:Body&gt;"
                             "&lt;/soap:Envelope&gt;",
                             &lt;# some parameter #&gt;
                             &lt;# some parameter #&gt;
                             ];
    
    
    NSURL *url = [NSURL URLWithString:&lt;# some URL #&gt;];
    NSMutableURLRequest *theRequest = [NSMutableURLRequest requestWithURL:url];
    NSString *msgLength = [NSString stringWithFormat:@"%lu", (unsigned long)[soapMessage length]];
    
    [theRequest addValue: @" text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    
    [theRequest addValue:&lt;# action #&gt;  forHTTPHeaderField:@"SOAPAction"];
    [theRequest addValue: msgLength forHTTPHeaderField:@"Content-Length"];
    [theRequest setHTTPMethod:@"POST"];
    [theRequest setHTTPBody: [soapMessage dataUsingEncoding:NSUTF8StringEncoding]];
    
    NSURLConnection *theConnection =
    [[NSURLConnection alloc] initWithRequest:theRequest delegate:self];
    
    
    (theConnection) ? mutableData = [NSMutableData data]:  NSLog(@"Connection Is Nul;");
}

-(void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response{
    [mutableData setLength: 0];
}

-(void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data{
    [mutableData appendData:data];
}

-(void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error{
    NSLog(@" Error With Conenction");
}

-(void)connectionDidFinishLoading:(NSURLConnection *)connection
{
    
    NSString *theXML = [[NSString alloc] initWithBytes:
                        [mutableData mutableBytes] length:[mutableData length] encoding:NSUTF8StringEncoding];
    
    theXML = [theXML stringByReplacingOccurrencesOfString:@"&amp;lt"
                                               withString:@"&lt;"];
    theXML = [theXML stringByReplacingOccurrencesOfString:@"&amp;gt"
                                               withString:@"&gt;"];
    theXML = [theXML stringByReplacingOccurrencesOfString:@";"
                                               withString:@""];
    theXML = [theXML stringByReplacingOccurrencesOfString:@";/"
                                               withString:@"/"];
    
    NSLog(@"theXML = %@",theXML);
    
    NSXMLParser *xmlParser = [[NSXMLParser alloc] initWithData:mutableData];
    
    xmlParser.delegate = self;
    
    if (![xmlParser parse])
        NSLog(@" Parse Error: %@", [xmlParser parserError]);
        
        }


- (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName
namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qualifiedName
attributes:(NSDictionary *)attributeDict{
    
}

- (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string {
    
    if(!currentDescription)
        currentDescription = [[NSMutableString alloc] initWithString:string];
        else
            [currentDescription appendString:string];
}


- (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName
namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName
{
    
    if (!currentDescription) {
        
        NSLog(@" did not retrive data");
        
        return;
    }
    
    NSString *value = currentDescription;
    
    NSLog(@" currentDescription = %@",value);
    
    if (currentDescription !=nil)
        value=[value stringByTrimmingCharactersInSet:
               [NSCharacterSet whitespaceAndNewlineCharacterSet]];
        
        
        NSError *error;
    
    NSData *data = [currentDescription dataUsingEncoding:NSUTF8StringEncoding];
    
    NSDictionary *tempDic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:&amp;error];
    
    &lt;# Do past value #&gt;
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>048D80EE-23CF-4ECC-9EDF-8B144906DE4C</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetTitle</key>
	<string>## Get Data Via Soap</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
