<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>PP </string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>let &lt;#name#&gt; = UIPickerView()
&lt;#name#&gt;.frame = CGRect(x: &lt;#T##Double#&gt;, y: &lt;#T##Double#&gt;, width: &lt;#T##Double#&gt;, height: &lt;#T##Double#&gt;)
&lt;#name#&gt;.dataSource = self
&lt;#name#&gt;.delegate = self
view.addSubview(&lt;#name#&gt;)

extension &lt;#UIViewController#&gt; : UIPickerViewDelegate{
    
    func pickerView(_ pickerView: UIPickerView, rowHeightForComponent component: Int) -&gt; CGFloat {
        return &lt;#CGFloat#&gt;
    }
    
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -&gt; String? {
        return &lt;#String#&gt;
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        &lt;#code#&gt;
    }
}

extension &lt;#UIViewController#&gt; : UIPickerViewDataSource{
    
    func numberOfComponents(in pickerView: UIPickerView) -&gt; Int {
        return &lt;#Int#&gt;
    }
    
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -&gt; Int {
        return &lt;#Int#&gt;
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>3D856FAE-DBA9-4104-B0AC-9A3ADB6D1C9D</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetTitle</key>
	<string>UIPickerView - Delegate &amp; Datasource</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
